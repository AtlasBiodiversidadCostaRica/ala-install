- include_vars: "{{role_path}}/../nginx_vhost/vars/main.yml"

- name: determine if a virtual host is required (vhost not required for localhost, 127.0.0.1 or any hostname with a colon in it)
  set_fact: vhost_required={{ hostname.find(':') == -1 and hostname.find('localhost') == -1 and hostname.find('127.0.0.1') == -1 }}

- name: Is a virtual host required?
  debug: msg="Virtual Host required for hostname {{hostname}}? {{vhost_required}}"

- name: check whether HTTPS is required
  set_fact: ssl={{ ssl | default(false) }}

- name: Is HTTPS required?
  debug: msg="HTTPS required for hostname {{hostname}}? {{ssl}}"

- name: Should HTTP redirect to HTTPS?
  debug: msg="Force HTTPS for hostname {{hostname}}? {{force_https|default(true)}}"

- name: set redirect variable, if required
  set_fact: redirect="{{ 'return 301 https://$server_name$request_uri' if ( ssl and force_https|default(true) ) else '' }}"

- name: print redirect
  debug: msg={{ redirect }}

- name: set ssl_cert_filepath variable, if required
  set_fact: ssl_cert_filepath={{ssl_certificate_server_dir}}/{{ ssl_cert_file }}
  when: ssl_cert_file is defined and ssl_certificate_server_dir is defined

- name: set ssl_key_filepath variable, if required
  set_fact: ssl_key_filepath={{ssl_certificate_server_dir}}/{{ ssl_key_file }}
  when: ssl_key_file is defined and ssl_certificate_server_dir is defined

- name: set ssl_chain_filepath variable, if required
  set_fact: ssl_chain_filepath={{ssl_certificate_server_dir}}/{{ ssl_chain_file }}
  when: ssl_chain_file is defined and ssl_certificate_server_dir is defined

- name: copy HTTPS certificate files from local
  copy: src={{item}} dest={{ssl_certificate_server_dir}}
  with_items:
    - "{{ssl_certificate_local_dir}}/{{ssl_cert_file}}"
    - "{{ssl_certificate_local_dir}}/{{ssl_key_file}}"
    - "{{ssl_certificate_local_dir}}/{{ssl_chain_file}}"
  when: ssl and copy_https_certs_from_local and ssl_certificate_server_dir is defined

- name: is it picking up from vars
  debug: msg="Nginx vhost vars {{ nginx_sites.keys() }} "

- name: Create the configurations for sites
  template: src={{role_path}}/../nginx_vhost/templates/site.conf.j2 dest={{nginx_conf_dir}}/sites-available/{{hostname}}_{{ item }}.conf
  with_items: "{{ nginx_sites.keys() | difference(nginx_remove_sites) }}" 
  when: vhost_required
  notify:
   - reload nginx

- name: Create the configurations for https sites
  template: src={{role_path}}/../nginx_vhost/templates/https_site.conf.j2 dest={{nginx_conf_dir}}/sites-available/{{hostname}}_{{ item }}_https.conf
  with_items: "{{ nginx_https_sites.keys() | difference(nginx_remove_sites) }}"
  when: ssl and vhost_required
  notify:
   - reload nginx

- name: Create links for sites-enabled
  file: state=link src={{nginx_conf_dir}}/sites-available/{{hostname}}_{{ item }}.conf dest={{nginx_conf_dir}}/sites-enabled/{{hostname}}_{{ item }}.conf
  with_items: "{{ nginx_sites.keys() | difference(nginx_remove_sites) }}"
  when: vhost_required
  notify:
   - reload nginx
   
- name: Create links for https sites-enabled
  file: state=link src={{nginx_conf_dir}}/sites-available/{{hostname}}_{{ item }}_https.conf dest={{nginx_conf_dir}}/sites-enabled/{{hostname}}_{{ item }}_https.conf
  with_items: "{{ nginx_https_sites.keys() }}"
  when: ssl and vhost_required
  notify:
   - reload nginx
