- include: ../../common/tasks/setfacts.yml

- name: install Postgis and GDAL Execs
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
    - postgis
    - gdal-bin

- name: copy transient files to tmp (schemas etc)
  copy: src={{item}} dest=/tmp
  with_items:
    - layersdb.sql
    - stored_procs.sql    
  tags:
    - createdb

# Not working currently.....
- name: setup the DB - WARNING!!! this isnt idempotent yet
  command: "psql -d {{ layers_db_name | default('layersdb') }} -a -f /tmp/layersdb.sql"
  sudo_user: postgres
  sudo: True  
  tags:
    - createdb

- name: setup stored procedures - WARNING!!! this isnt idempotent yet
  command: "psql -d {{ layers_db_name | default('layersdb') }} -a -f /tmp/stored_procs.sql"
  sudo_user: postgres
  sudo: True  
  tags:
    - createdb

- name: setup the DB user password
  command: "psql -d {{ layers_db_name | default('layersdb') }} -c \"ALTER USER {{ layers_db_username }} WITH PASSWORD '{{ layers_db_password }}' \""
  sudo_user: postgres
  sudo: True  
  tags:
    - createdb

- name: download from maven repo
  command: "wget {{layers_service_war_url}} --output-document={{tomcat_webapps}}layers-service.war"

- include: ../../apache_vhost/tasks/main.yml context_path='{{ layers_service_context_path }}' hostname='{{ layers_service_hostname }}'
  tags:
    - deploy
    - apache_vhost

- include: ../../tomcat_deploy/tasks/main.yml war_url='{{ layers_service_war_url }}' context_path='{{ layers_service_context_path }}' hostname='{{ layers_service_hostname }}'
  tags:
    - deploy
    - tomcat_vhost

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  with_items:
    - "{{data_dir}}/layers-store/config"
    - "{{data_dir}}/layers-store/batch_requests"
    - "{{data_dir}}/layers-service/config"
    - "{{data_dir}}/ala/data/layers/ready/shape"
    - "{{data_dir}}/ala/data/layers/ready/shape_diva"
    - "{{data_dir}}/ala/data/layers/ready/diva"

- name: copy all config.properties
  template: src=config/layers-store-config.properties dest={{data_dir}}/layers-store/config/layers-store-config.properties

- name: copy all config.properties
  template: src=config/layers-service-config.properties dest={{data_dir}}/layers-service/config/layers-service-config.properties

- name: copy all log4j.properties
  template: src=config/log4j.properties dest={{data_dir}}/layers-store/config/log4j.properties

- name: copy all log4j.properties
  template: src=config/log4j.properties dest={{data_dir}}/layers-service/config/log4j.properties

- name: copy all data-config.xml
  template: src=config/data.xml dest={{data_dir}}/layers-service/config/layers-service-data-config.xml

- name: copy all data-config.xml
  template: src=config/data.xml dest={{data_dir}}/layers-store/config/layers-store-data-config.xml

- name: set data ownership
  file: path={{data_dir}}/layers-store owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify: 
    - restart tomcat

- name: set data ownership
  file: path={{data_dir}}/layers-service owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify:
    - restart tomcat

- name: set data ownership
  file: path={{data_dir}}/ala owner={{tomcat_user}} group={{tomcat_user}} recurse=true

- debug: msg="To finish installation copy the layer files used by the primary layers-service into {{ data_dir }}/ala/data/layers/ready for the subdirectories diva, shape and shape_diva"
